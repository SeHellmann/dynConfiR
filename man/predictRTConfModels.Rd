% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predictConfModels.R
\name{predictRTConfModels}
\alias{predictRTConfModels}
\alias{predictConfModels}
\alias{predictRTModels}
\title{Functions for predicting several sequential sampling confidence models in parallel}
\usage{
predictConfModels(paramDf, maxrt = 15, subdivisions = 100L,
  simult_conf = FALSE, stop.on.error = FALSE, .progress = TRUE,
  parallel = TRUE, n.cores = NULL)

predictRTModels(paramDf, maxrt = 9, subdivisions = 100L, minrt = NULL,
  simult_conf = FALSE, scaled = FALSE, DistConf = NULL,
  .progress = TRUE, parallel = TRUE, n.cores = NULL)
}
\arguments{
\item{paramDf}{a dataframe with rows for participant and model combination. Columns must include
a participant or subject column, a model column and the
names of the model parameters. For different stimulus
quality/mean drift rates, names should be v1, v2, v3,.... Different s parameters
are possible with s1, s2, s3... with equally many steps as for drift rates.
Additionally, the confidence thresholds should be given by names with
thetaUpper1, thetaUpper2,..., thetaLower1,... or,
for symmetric thresholds only by theta1, theta2,....}

\item{maxrt}{numeric. The maximum RT for the
integration/density computation. Default: 15 (for \code{predictConf} (integration)) and
9 (for \code{predictRT}).}

\item{subdivisions}{\code{integer} (default: 100).
For \code{predictConf} it is used as argument for the inner integral routine.
For \code{predictRT} it is the number of points for which the density is computed.}

\item{simult_conf}{logical. Whether in the experiment confidence was reported simultaneously
with the decision, as then decision and confidence judgment are assumed to have happened
subsequent before response and computations are different, when there is an observable
interjudgment time (then simult_conf should be FALSE).}

\item{stop.on.error}{logical. Argument directly passed on to integrate. Default is FALSE, since
the densities invoked may converge slowly (but are still accurate) which causes R to throw an
error.}

\item{.progress}{logical. If TRUE (default) a progress bar is drawn to the console.}

\item{parallel}{logical. If TRUE, prediction is parallelized over participants and models
(i.e. over the calls for the prediction functions functions).}

\item{n.cores}{integer. If \code{parallel} is TRUE, the number of cores used for
parallelization is required. If NULL (default) the number of available cores -1 is used.}

\item{minrt}{numeric or NULL(default). The minimum rt for the density computation.
If NULL, the minimal possible response time possible with given parameters will be used (min(t0)).}

\item{scaled}{logical. For \code{predictRT}. Whether the computed density
should be scaled to integrate to one (additional column densscaled). Otherwise the output
is a defective density (i.e. its integral is equal to the probability of a response and
not 1). If TRUE, the argument DistConf should be given, if available. Default: FALSE.}

\item{DistConf}{NULL or data.frame. For \code{predictRTModels}. A data.frame with participant
and model columns and columns, giving the distribution of response and rating choices for
different conditions and stimulus categories in the form of the output of
\code{predictConfModels}. It is only necessary, if scaled=TRUE, because these
probabilities are used for scaling. If scaled=TRUE and DistConf=NULL, it will be computed
with the function \code{predictConfModels}, which takes some time and the function will
throw a message. Default: NULL}
}
\value{
\code{predictConfModels} gives a data frame/tibble with columns: participant, model,
condition, stimulus, response, rating, correct, p, info, err. p is the predicted probability
of a response and rating, given the stimulus category and condition. Message and error refer
to the respective outputs of the integration routine used for prediction.
\code{predictRTModels} returns a data frame/tibble with columns: participant, model,
condition, stimulus, response, rating, correct, rt and dens (and densscaled, if scaled=TRUE).
}
\description{
This function is a wrapper around the functions \code{\link{predictConf}} (see
there for more information). It calls the respective function for predicting the
response distribution (discrete decision and rating outcomes) and the rt density
(density for decision, rating and response time) for every model and
participant combination in \code{paramDf}.
Also, see \code{\link{dWEV}}, \code{\link{d2DSD}}, and \code{\link{dRM}} for more
information about the parameters.
}
\details{
The function \code{\link{predictConf}} (called by \code{predictConfModels})
consists merely of an integration of the reaction time density or the given model,
\code{{d*model*}}, over the reaction time in a reasonable interval (0 to maxrt).
The function \code{\link{predictRT}} (called by \code{predictRTModels}) wraps these
density functions to a parameter set input and a data.frame output. For the argument
\code{paramDf}, the output of the fitting function \code{\link{fitRTConfModels}} with the
respective models and participants may be used.

Note, that the encoding for stimulus identity is different between diffusion based models
(2DSD, dynWEV) and race models (IRM(t), PCRM(t)). Therefore, in the columns stimulus and
response there will be a mix of encodings: -1/1 for diffusion based models and 1/2 for
race models. This, usually is not important, since for further aggregation models will
not be mixed.
}
\note{
Different parameters for different conditions are only allowed for drift rate,
\code{v}, and drift rate variability, \code{s}. All other parameters are used for all
conditions.
}
\references{
Pleskac, T. J., & Busemeyer, J. R. (2010). Two-Stage Dynamic Signal Detection: A Theory of Choice, Decision Time, and Confidence, \emph{Psychological Review}, 117(3), 864-901. doi:10.1037/a0019737

Rausch, M., Hellmann, S., & Zehetleitner, M. (2018). Confidence in masked orientation judgments is informed by both evidence and visibility. \emph{Attention, Perception, & Psychophysics}, 80(1), 134â€“154.  doi: 10.3758/s13414-017-1431-5

https://nashjc.wordpress.com/2016/11/10/why-optim-is-out-of-date/

https://hwborchers.lima-city.de/Presents/ROptimSlides4.pdf
}
\author{
Sebastian Hellmann.
}
